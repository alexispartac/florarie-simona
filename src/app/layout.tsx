import { RestrictedComponents } from "./components/RestrictedComponents";
import { AutoConnectWithToken } from "./components/AutoConnectWithToken";
import AnimateForBegin from "./components/ui/animate-for-begin";
import ReduxProvider from "./cart/components/ReduxProvider";
import { UserProvider } from "./components/ContextUser";
import QueryProvider from "./components/QueryProvider";
import { Geist, Geist_Mono } from "next/font/google";
import { MantineProvider } from '@mantine/core';
import type { Metadata } from "next";
import '@mantine/core/styles.css';
import "./globals.css";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <MantineProvider>
            <UserProvider>
              <QueryProvider>
                <ReduxProvider>
                  <AutoConnectWithToken />
                  <AnimateForBegin />
                  <RestrictedComponents>
                    {children}
                  </RestrictedComponents>
                </ReduxProvider>
              </QueryProvider>
            </UserProvider>
        </MantineProvider>
      </body>
    </html>
  );
}


